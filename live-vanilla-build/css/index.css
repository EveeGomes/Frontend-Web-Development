@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&display=swap");

/* Defined variables for colors; then to use it we need var(--name) */
:root {
  --dark-gray: #1a2a32;
  --gray: #2e4756;
  --turquoise: #3cc4bf;
  --yellow: #f2b147;
  --light-gray: #d3d3d3;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  list-style: none;
  font-family: "Montserrat", sans-serif;
  border: none;
}

html,
body {
  height: 100%;
  background-color: var(--dark-gray);
}

body {
  padding: 90px 20px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* Shared utility classes */
/* By adding hidden and border classes here, it'll hide the buttons in the menu element! */
.hidden {
  /* Add !important to make sure nothing will conflit with it. */
  display: none !important;
}

/* shortcuts for some colors (optional... just make things a bit easier) */
.yellow {
  color: var(--yellow);
}

.turquoise {
  color: var(--turquoise);
}

.shadow {
  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,
    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;
}

.border {
  border: 1px solid rgba(211, 211, 211, 0.04) !important;
}

/* grid container */
.grid {
  display: grid;
  grid-template-columns: repeat(3, 80px);
  grid-template-rows: 50px repeat(3, 80px) 60px;
  gap: 5px;
}

@media (min-width: 768px) {
  .grid {
    width: 490px;
    grid-template-columns: repeat(3, 150px);
    grid-template-rows: 50px repeat(3, 150px) 60px;
    gap: 20px;
  }
}

.turn {
  color: var(--yellow);
  /* This tells how to align itself within the grid */
  grid-column-start: 1;
  grid-column-end: 3;
  align-self: center;
  /* Specifications for how the content inside the container is going to be aligned */
  display: flex;
  align-items: center;
  gap: 20px;
}

@keyframes turn-text-animation {
  /* 45:22 */
  0% {
    opacity: 0;
    transform: translateX(-20px);
  }
  100% {
    opacity: 100%;
    transform: translateX(0);
  }
}

/* Add selectors for the turn text/paragraph */
.turn p {
  font-size: 14px;
  animation: 0.6s ease-in-out turn-text-animation;
}

@keyframes turn-icon-animation {
  /* ~43:50 */
  0% {
    transform: scale(1);
  }
  25% {
    transform: scale(1.4);
  }
  100% {
    transform: scale(1);
  }
}

/* Add selectors for the turn icon */
.turn i {
  font-size: 1.8rem;
  margin-left: 10px;
  animation: 0.6s ease-in-out turn-icon-animation;
  /* To add an animation in css, we use the animation property and set a time for it, how it should behave and a name; 
  With the name we can use it to reference it in the keyframes above. */
}

/* Menu styles */
/* The menu actions will be controlled with js for the open and close behavior, but we can style it */
.menu {
  background-color: purple;
  /* This is will tell where it has to open in relation to the DOM */
  position: relative;
}

.menu-btn {
  /* Make it 100% of its container; 49:46 */
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: space-around;
  align-items: center;
  border-radius: 10px;
  color: white;
  background-color: rgba(211, 211, 211, 0.05);
  border: 1px solid transparent;
}

.menu-btn:focus,
.menu-btn:hover {
  background-color: rgba(211, 211, 211, 0.07);
}

.items {
  /* They will be positioned absolutely relative to the menu element. ~52min */
  position: absolute;
  z-index: 10;
  top: 60px;
  right: 0;
  background-color: #203139;
  border-radius: 2px;
  padding: 10px;
}

/* Do the buttons relative to items (that's why .menu isn't used here) */
.items button {
  background-color: transparent;
  padding: 8px;
  color: white;
}

/* Add hover styles */
.items button:hover {
  text-decoration: underline;
  cursor: pointer;
}

.square {
  background-color: red;
}

.score {
  background-color: blue;
}

/* Footer styles */

footer {
  color: white;
  margin-top: 50px;
}

footer p {
  margin-top: 10px;
  text-align: center;
}

footer a {
  color: var(--yellow);
}
